import os
import pandas as pd
from goatools.obo_parser import GODag
import re

obo_path = "pipeline/go.obo"

# Load GO DAG
go_dag = GODag(obo_path)

# Helper to get aspect letter from GO ID
def get_go_aspect(go_id, go_dag):
    """
    Get the aspect of a GO term.
    """
    if go_id in go_dag:
        go_term = go_dag[go_id]
        return go_term.name
    else:
        return "Unknown"
    
def sanitize_filename(name):
    # Replace any character that is not alphanumeric or underscore with underscore
    return re.sub(r'[^A-Za-z0-9_]', '_', name)


name = "Homo_sapiens"  # Example organism name
working_dir = os.path.dirname("pipeline/output/output_20250515_105213/" + name + "/")
feature_matrix_path = working_dir + "/feature_matrix_with_go_terms.csv"
# Read the feature matrix from the CSV file
df = pd.read_csv(feature_matrix_path)

# group the protein ids by the go term
grouped_proteins = df.groupby('GO_Term')['protein_id'].apply(list)
print(grouped_proteins)

parent_dir = "pipeline/output/output_20250515_105213/Homo_sapiens/go_term_rf_results"
# Iterate through the grouped proteins and save each list of protein IDs to a text file
for go_term, protein_ids in grouped_proteins.items():
    # Create a directory for the GO term if it doesn't exist
    aspect = get_go_aspect(go_term, go_dag)
    aspect = aspect.replace(" ", "_")
    aspect = sanitize_filename(aspect)
    new_folder_name = f"{aspect}_{go_term}"
    # Define the path for the text file
    output_dir = os.path.join(parent_dir, new_folder_name)
    file_path = os.path.join(output_dir, "protein_ids.txt")
    if not os.path.exists(output_dir):
        os.makedirs(output_dir, exist_ok=True)
    
    # Write the protein IDs to the text file
    with open(file_path, 'w') as f:
        f.write("\n".join(protein_ids))

